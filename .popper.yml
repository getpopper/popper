steps:
- id: filter build
  uses: docker://docker:19.03.3
  runs: [sh, -exc]
  secrets: [ENGINE, PYTHON_VERSION, IS_PULL_REQUEST]
  args:
  - |
    # build does not correspond to the docker,python-3.8 element of the matrix
    if [[ "$ENGINE" != "docker" || "$PYTHON_VERSION" != "3.8" ]]; then
      exit 78
    fi

    # a build for a PR
    if [[ "$IS_PULL_REQUEST" == "true" ]]; then
      exit 78
    fi

    # build is not for upstream (getpopper/popper) repo
    if [[ "$GIT_REMOTE_ORIGIN_URL" != "https://github.com/getpopper/popper" ]]; then
      exit 78
    fi

    # not on master
    if [[ "$GIT_BRANCH" != "master" ]]; then
      exit 78
    fi

- id: dockerhub release
  uses: docker://docker:19.03
  secrets: [DOCKER_USERNAME, DOCKER_PASSWORD]
  runs: [sh, -ec]
  args:
  - |
    docker build -t getpopper/popper src/
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"

    docker tag getpopper/popper getpopper/popper:$GIT_SHA_SHORT
    docker push getpopper/popper
    docker push getpopper/popper:$GIT_SHA_SHORT

    if [[ "$GIT_TAG" != "" ]]; then
      docker tag getpopper/popper getpopper/popper:$GIT_TAG
      docker push getpopper/popper:$GIT_TAG
    fi

- id: filter pypi if not a tagged release
  uses: docker://docker:19.03
  runs: [sh, -ec]
  args:
  - |
    if [[ "$GIT_TAG" == "" ]]; then
      exit 78
    fi

- id: pypi release
  uses: docker://python:3.7-buster
  secrets: [PYPI_USERNAME, PYPI_PASSWORD]
  runs: [bash, -ec]
  args:
  - |
    pip install twine
    cd src/
    python setup.py sdist
    twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" dist/*
