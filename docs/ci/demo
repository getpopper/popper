#!/bin/bash
set -ex

function init_test {
  cd
  rm -rf /tmp/mypaper
  mkdir /tmp/mypaper
  cd /tmp/mypaper
  git init
  popper init
}

popper --help

init_test
test -f .popper.yml

# default values

popper init paper
cat .popper.yml | grep 'path: paper'
test -f paper/build.sh

popper init pipeone
cat .popper.yml | grep '\- host'
cat .popper.yml | grep 'path: pipelines/pipeone'
test -f pipelines/pipeone/setup.sh
test -f pipelines/pipeone/run.sh
test -f pipelines/pipeone/post-run.sh
test -f pipelines/pipeone/validate.sh
test -f pipelines/pipeone/teardown.sh

# user-friendly timeout values
popper run --timeout 2.5
popper run --timeout 10s
popper run --timeout 0.5m
popper run --timeout .01h
popper run --timeout "1m 10s"

# arbitrary stages and envs
init_test
popper init --stages=one,two,three --envs=host,ubuntu-xenial pipetwo
popper init --stages=one,two,teardown sample_exp

set +e
popper init --stages=one,teardown,three sample_exp2
test $? -ne 0
set -e

cat .popper.yml | grep '\- host'
cat .popper.yml | grep '\- ubuntu-xenial'
cat .popper.yml | grep '\- one'
cat .popper.yml | grep '\- two'
cat .popper.yml | grep '\- three'
test -f pipelines/pipetwo/one.sh
test -f pipelines/pipetwo/two.sh
test -f pipelines/pipetwo/three.sh

# existing pipeline
init_test
mkdir ci
echo '' > ci/one.sh
echo '' > ci/two
echo '' > ci/three
popper init --existing --stages=one,two,three ci
cat .popper.yml | grep '\- host'
cat .popper.yml | grep '\- one'
cat .popper.yml | grep '\- two'
cat .popper.yml | grep '\- three'
cat .popper.yml | grep 'path: ci'

mkdir -p my/custom/path/to/pipeline/ci2
echo '' > my/custom/path/to/pipeline/ci2/script1.sh
echo '' > my/custom/path/to/pipeline/ci2/script2.txt
echo '' > my/custom/path/to/pipeline/ci2/script3.sh

popper init --existing --infer-stages my/custom/path/to/pipeline/ci2
cat .popper.yml| grep 'ci2:'
cat .popper.yml| grep ' - script1'
set +e
cat .popper.yml| grep ' - script2'
test $? -eq 1
set -e
cat .popper.yml| grep ' - script3'


popper ci --service travis
test -f .travis.yml

popper ci --service circle
test -f .circleci/config.yml

# run
init_test
popper init mypipeone
popper run mypipeone
test -f pipelines/mypipeone/popper_logs/setup.sh.err
test -f pipelines/mypipeone/popper_logs/setup.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/post-run.sh.out
test -f pipelines/mypipeone/popper_logs/post-run.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipeone/popper_logs/teardown.sh.out
test -f pipelines/mypipeone/popper_logs/teardown.sh.out
test -f pipelines/mypipeone/popper_status

# stages
popper stages mypipeone | grep -q setup
popper stages mypipeone | grep -q run
popper stages mypipeone | grep -q post-run
popper stages mypipeone | grep -q validate
popper stages mypipeone | grep -q teardown
popper stages mypipeone --set setup,run,teardown
popper stages mypipeone | grep -q setup
popper stages mypipeone | grep -q run
popper stages mypipeone | grep -q teardown
! popper stages mypipeone | grep -q validate # make sure validate does not show up

# within the pipeline folder, without some stages
init_test
popper init mypipeone
cd pipelines/mypipeone
rm teardown.sh
rm post-run.sh
popper run
test -f popper_logs/setup.sh.err
test -f popper_logs/setup.sh.out
test -f popper_logs/run.sh.out
test -f popper_logs/run.sh.out
test -f popper_logs/validate.sh.out
test -f popper_logs/validate.sh.out
rm -r popper_logs

# run all pipelines
cd /tmp/mypaper
popper init mypipetwo --stages=one,two
popper run
test -f pipelines/mypipeone/popper_logs/setup.sh.err
test -f pipelines/mypipeone/popper_logs/setup.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipetwo/popper_logs/one.sh.err
test -f pipelines/mypipetwo/popper_logs/one.sh.out
test -f pipelines/mypipetwo/popper_logs/two.sh.out
test -f pipelines/mypipetwo/popper_logs/two.sh.out
test -f pipelines/mypipetwo/popper_status

# metadata
popper metadata --add authors='the ramones, sex pistols'
popper metadata | grep 'the ramones, sex pistols'
popper metadata --add authors='the police'
popper metadata | grep 'the police'
popper metadata --add year=1979
popper metadata | grep "year"
popper metadata | grep "the police"

# env
init_test
popper init mypipeone
popper env mypipeone | grep 'host'
popper env mypipeone --add foo
popper env mypipeone | grep 'host'
popper env mypipeone | grep 'foo'
popper env mypipeone --add bar,baz
popper env mypipeone | grep 'host'
popper env mypipeone | grep 'foo'
popper env mypipeone | grep 'bar'
popper env mypipeone | grep 'baz'
popper env mypipeone --rm foo,bar,baz
popper env mypipeone | grep 'host'

# popper add
init_test
popper add popperized/swc-lesson-pipelines/co2-emissions
test -d pipelines/co2-emissions
test -f pipelines/co2-emissions/README.md
test -f pipelines/co2-emissions/run.sh
test -f pipelines/co2-emissions/setup.sh
test -f pipelines/co2-emissions/validate.sh

# info command
popper info popperized/swc-lesson-pipelines/co2-emissions | grep 'url'

# popper add --branch
init_test
popper add popperized/swc-lesson-pipelines/co2-emissions --branch revert-1-master
test -d pipelines/co2-emissions
test -d pipelines/co2-emissions/scripts
test -f pipelines/co2-emissions/README.md
test -f pipelines/co2-emissions/run.sh
test -f pipelines/co2-emissions/setup.sh
test -f pipelines/co2-emissions/validate.sh

# cleanup command
init_test
popper init mypipetwo
popper init mypipethree
rm pipelines/mypipetwo/teardown.sh
rm pipelines/mypipetwo/post-run.sh
rm -rf pipelines/mypipethree
cat .popper.yml | grep mypipethree
popper stages mypipetwo | grep teardown
popper stages mypipetwo | grep post-run
popper cleanup
! cat .popper.yml | grep mypipethree
! popper stages mypipetwo | grep teardown
! popper stages mypipetwo | grep post-run

# archive command test
init_test
popper init archive_pipe
git config --global user.email "testuser@example.com"
git config --global user.name "Test User"
echo "echo \"Today's date is: $(date +"%Y%m%d-%H%M%S")\"" >> pipelines/archive_pipe/post-run.sh
popper metadata --add title='Popper test archive'
popper metadata --add author1='Test Author, testauthor@gmail.com, popper'
popper metadata --add abstract='A short description of the article'
popper metadata --add keywords='comma, separated, keywords'
git remote add origin https://github.com/systemslab/popper-test.git
git add . && git commit -m "Add metadata"
popper archive --service zenodo
popper metadata --add categories='1656'
git add . && git commit -m "Modify metadata"
popper archive --service figshare

# test popper rm command
init_test
popper init mypipetwo
popper rm mypipetwo

# test popper search command
init_test
popper search quiho
test -d ./.cache
popper search --list-repos
popper search quiho --skip-update
popper search linux --skip-update
popper search linux --rm popperized
set +e
cat .popper.yml | grep 'github/popperized'
test $? -eq 1
set -e
popper search linux --add popperized
cat .popper.yml | grep 'github/popperized'
init_test
set +e
popper search quiho --skip-update
test $? -eq 1
set -e

# test listing of available environments
popper env --ls

# workflow
init_test
popper init pipeone
popper workflow pipeone > wf.dot
cat wf.dot | grep digraph
cat wf.dot | grep setup
cat wf.dot | grep post_run
cat wf.dot | grep validate
cat wf.dot | grep teardown
