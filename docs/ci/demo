#!/bin/bash
set -ex

function init_test {
  cd
  rm -rf /tmp/mypaper
  mkdir /tmp/mypaper
  cd /tmp/mypaper
  git init
  popper init
}

init_test
test -f .popper.yml

# default values

popper init paper
cat .popper.yml | grep 'path: paper'
test -f paper/build.sh

popper init pipeone
cat .popper.yml | grep '\- host'
cat .popper.yml | grep 'path: pipelines/pipeone'
test -f pipelines/pipeone/setup.sh
test -f pipelines/pipeone/run.sh
test -f pipelines/pipeone/post-run.sh
test -f pipelines/pipeone/validate.sh
test -f pipelines/pipeone/teardown.sh

# user-friendly timeout values
popper run --timeout 2.5
popper run --timeout 10s
popper run --timeout 0.5m
popper run --timeout .01h
popper run --timeout "1m 10s"

# arbitrary stages and envs
init_test
popper init --stages=one,two,three --envs=host,ubuntu-xenial pipetwo
cat .popper.yml | grep '\- host'
cat .popper.yml | grep '\- ubuntu-xenial'
cat .popper.yml | grep '\- one'
cat .popper.yml | grep '\- two'
cat .popper.yml | grep '\- three'
test -f pipelines/pipetwo/one.sh
test -f pipelines/pipetwo/two.sh
test -f pipelines/pipetwo/three.sh

# existing pipeline
init_test
mkdir ci
echo '' > ci/one.sh
echo '' > ci/two
echo '' > ci/three
popper init --existing --stages=one,two,three ci
cat .popper.yml | grep '\- host'
cat .popper.yml | grep '\- one'
cat .popper.yml | grep '\- two'
cat .popper.yml | grep '\- three'
cat .popper.yml | grep 'path: ci'

popper ci --service travis
test -f .travis.yml

# run
init_test
popper init mypipeone
popper run mypipeone
test -f pipelines/mypipeone/popper_logs/setup.sh.err
test -f pipelines/mypipeone/popper_logs/setup.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/post-run.sh.out
test -f pipelines/mypipeone/popper_logs/post-run.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipeone/popper_logs/teardown.sh.out
test -f pipelines/mypipeone/popper_logs/teardown.sh.out
test -f pipelines/mypipeone/popper_status

# within the pipeline folder, without some stages
init_test
popper init mypipeone
cd pipelines/mypipeone
rm teardown.sh
rm post-run.sh
popper run
test -f popper_logs/setup.sh.err
test -f popper_logs/setup.sh.out
test -f popper_logs/run.sh.out
test -f popper_logs/run.sh.out
test -f popper_logs/validate.sh.out
test -f popper_logs/validate.sh.out
rm -r popper_logs

# run all pipelines
cd /tmp/mypaper
popper init mypipetwo --stages=one,two
popper run
test -f pipelines/mypipeone/popper_logs/setup.sh.err
test -f pipelines/mypipeone/popper_logs/setup.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/run.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipeone/popper_logs/validate.sh.out
test -f pipelines/mypipetwo/popper_logs/one.sh.err
test -f pipelines/mypipetwo/popper_logs/one.sh.out
test -f pipelines/mypipetwo/popper_logs/two.sh.out
test -f pipelines/mypipetwo/popper_logs/two.sh.out
test -f pipelines/mypipetwo/popper_status

# metadata
popper metadata | grep '{}'
popper metadata --add authors='the ramones, sex pistols'
popper metadata | grep 'the ramones, sex pistols'
popper metadata --add authors='the police'
popper metadata | grep 'the police'
popper metadata --add year=1979
popper metadata | grep "year"
popper metadata | grep "the police"

# env
init_test
popper init mypipeone
popper env mypipeone | grep 'host'
popper env mypipeone --add foo
popper env mypipeone | grep 'host'
popper env mypipeone | grep 'foo'
popper env mypipeone --add bar,baz
popper env mypipeone | grep 'host'
popper env mypipeone | grep 'foo'
popper env mypipeone | grep 'bar'
popper env mypipeone | grep 'baz'
popper env mypipeone --rm foo,bar,baz
popper env mypipeone | grep 'host'

# TODO

#popper ci circleci
#test -f .circleci/config.yml
#
#popper ci jenkins
#test -f Jenkinsfile

#popper workflow pipeone > wf.dot
#cat wf.dot | grep digraph
#cat wf.dot | grep setup
#cat wf.dot | grep post-run
#cat wf.dot | grep validate
#cat wf.dot | grep teardown
#
#cd pipelines/pipeone
