#!/bin/bash
set -ex
# shellcheck source=./ci/test/common
source ./ci/test/common
init_test_repo

cd "$test_repo_path"

popper ci travis
test -f .travis.yml
cat .travis.yml

popper ci circle
test -f .circleci/config.yml
cat .circleci/config.yml

popper ci jenkins
test -f Jenkinsfile
cat Jenkinsfile

popper ci gitlab
test -f .gitlab-ci.yml
cat .gitlab-ci.yml

popper ci brigade
test -f brigade.js
cat brigade.js

popper ci travis --install singularity
test -f .travis.yml
test -f scripts/install_scripts.sh
cat .travis.yml
cat scripts/install_scripts.sh

popper ci circle --install singularity
test -f .circleci/config.yml
test -f scripts/install_scripts.sh
cat .circleci/config.yml
cat scripts/install_scripts.sh

popper ci brigade --install singularity
test -f brigade.js
test -f scripts/install_scripts.sh
cat brigade.js
cat scripts/install_scripts.sh

(! popper ci jenkins --install singularity)

(! popper ci gitlab --install singularity)


# Test blacklisting/skip in CI environment

export CI=true

cd $test_repo_path

mkdir myaction
cd myaction

touch README.md

cat <<EOF > a.workflow
workflow "wf" {
  resolves = "a"
}
action "a" {
  uses = "sh"
  args = "ls"
}
EOF

cat <<EOF > b.workflow
workflow "wf" {
  resolves = "a"
}
action "a" {
  uses = "sh"
  args = "ls"
}
EOF

cat <<EOF > c.workflow
workflow "wf" {
  resolves = "a"
}
action "a" {
  uses = "sh"
  args = "ls"
}
EOF


git init
git add .
git commit -m "popper:run[--wfile /tmp/mypaper/myaction/a.workflow] popper:run[--wfile /tmp/mypaper/myaction/b.workflow]"
popper run --dry-run --engine "$ENGINE" > output
grep -q "Found and running workflow at /tmp/mypaper/myaction/a.workflow" output
grep -q "Found and running workflow at /tmp/mypaper/myaction/b.workflow" output
(! grep -q "Found and running workflow at /tmp/mypaper/myaction/c.workflow" output)

cd $test_repo_path
cd myaction

cat <<EOF > d.workflow
workflow "wf" {
  resolves = "a"
}
action "a" {
  uses = "sh"
  args = "ls"
}
EOF

git add .
git commit -m "Test commit popper:run[--wfile /tmp/mypaper/myaction/a.workflow --debug] popper:run[--wfile /tmp/mypaper/myaction/d.workflow --quiet]"
popper run --dry-run --engine "$ENGINE" > output
grep -q "Found and running workflow at /tmp/mypaper/myaction/a.workflow" output
grep -q "Found and running workflow at /tmp/mypaper/myaction/d.workflow" output
count=$(grep -wc "README.md" output)
test "$count" -eq 1

cd $test_repo_path
cd myaction

cat <<EOF > e.workflow
workflow "wf" {
  resolves = ["a1", "a2"]
}

action "a1" {
  uses = "sh"
  args = "ls"
}

action "a2" {
  uses = "sh"
  args = "ls"
}
EOF

git add .
git commit -m "Test commit 2 popper:run[--wfile /tmp/mypaper/myaction/e.workflow --skip a1]"
popper run --dry-run --engine "$ENGINE" > output
grep -q "Found and running workflow at /tmp/mypaper/myaction/e.workflow" output
cat output
grep -q "a2" output
(! grep -q "a1" output)

git clone https://github.com/JayjeetAtGithub/test-merge-commits.git
cd test-merge-commits
popper run --dry-run --engine "$ENGINE" > output
grep -q "Found and running workflow at b.workflow" output
(! grep -q "Found and running workflow at a.workflow" output)
(! grep -q "Found and running workflow at c.workflow" output)

echo "Test CI passed."
