#!/bin/bash
set -ex
# shellcheck source=./ci/test/common
source ./ci/test/common
init_test_repo
cd "$test_repo_path"

# generate the workfow id
cat <<EOF > id.py
import os
import hashlib
identifier = str(os.getuid()) + "_main.workflow"
id = str(hashlib.md5(identifier.encode()).hexdigest())
print(id)
EOF

ID=$(python id.py 2>&1)

if [ "$ENGINE" == "vagrant" ]; then
mkdir -p "$HOME/.cache/.popper/vagrant/$ID"
cd "$HOME/.cache/.popper/vagrant/$ID"
cat <<EOF > Vagrantfile
Vagrant.configure("2") do |config|
    config.vm.box = "ailispaw/barge"
    config.vm.synced_folder "$HOME", "$HOME"
    config.vm.synced_folder "/tmp/mypaper", "/tmp/mypaper"
end
EOF
vagrant up
export DOCKER_HOST=tcp://0.0.0.0:2375
export DOCKER_API_VERSION=1.22
fi

# docker image not present locally, fail workflow using --skip-pull
if [[ "$(docker images -q debian:stretch-slim 2> /dev/null)" != "" ]]; then
docker rmi -f debian:stretch-slim
fi

cat <<EOF > main.workflow
workflow "sample workflow" {
    resolves = ["sample action"]
}

action "sample action" {
    uses = "docker://debian:stretch-slim"
    args = ["ls"]
}
EOF

(! popper run --skip-pull --engine "$ENGINE")

# action repo not present locally, fail workflow using --skip-clone
delete_dir "$HOME/.cache/.popper/actions/$ID/github.com/popperized/bin"

cat <<EOF > main.workflow
workflow "sample workflow" {
    resolves = ["sample action"]
}

action "sample action" {
    uses = "popperized/bin/sh@master"
    runs = ["sh", "-c", "echo Hello World"]
}
EOF

(! popper run --skip-clone --engine "$ENGINE")


# all actions, images, containers present locally, using --skip-clone, --skip-pull together.
docker pull debian:stretch-slim
if [ "$ENGINE" == "singularity" ]; then
rm -rf "$HOME/.cache/.popper/singularity/$ID"
mkdir "$HOME/.cache/.popper/singularity/$ID"
singularity pull --name popper_docker___debian_stretch-slim_"$ID".sif docker://debian:stretch-slim
mv popper_docker___debian_stretch-slim_"$ID".sif "$HOME/.cache/.popper/singularity/$ID/popper_docker___debian_stretch-slim_$ID.sif"
fi
git clone https://github.com/popperized/bin "$HOME/.cache/.popper/actions/$ID/github.com/popperized/bin"

cat <<EOF > main.workflow
workflow "sample workflow" {
    resolves = ["sample action one", "sample action two"]
}

action "sample action one" {
    uses = "docker://debian:stretch-slim"
    args = ["ls"]
}

action "sample action two" {
    uses = "popperized/bin/sh@master"
    runs = ["sh", "-c", "echo Hello World"]
}
EOF

popper run --skip-clone --skip-pull --engine "$ENGINE" > output
grep -q "sample action one" output
grep -q "sample action two" output


if [ "$ENGINE" == "vagrant" ]; then
vagrant destroy -f
export DOCKER_HOST=
rm -rf "$HOME/.cache/.popper/vagrant/$ID"
fi


echo "Test OFFLINE passed."
