
#!/bin/bash
set -ex
# shellcheck source=./ci/test/common
source ./ci/test/common
init_test_repo
cd "$test_repo_path"

#----------------------#
# Workflow block tests #
#----------------------#

## more than one workflow block present

cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

workflow "test two" {
  resolves = "show env"
}

workflow "test three" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}

action "show env one" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## workflow block present with unknown attributes.

cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
  attr1 = "attr1"
  attr2 = "attr2"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## workflow block not present
cat <<EOF > main.workflow
weeeorkflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## workflow block present
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

## resolves attribute not present
cat <<EOF > main.workflow
workflow "test" {
  foo = "bar"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## resolves attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = 1
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## resolves attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

## on attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
  on = ["push", "pull"]
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## on attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
  on = "push"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

#----------------------#
# Action block tests   #
#----------------------#

## workflow with duplicate action blocks
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## action block present with unknown attributes
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
  attr1 = "attr1"
  attr2 = "attr2"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## action block not present
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

acccction "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## action block present
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

## uses attribute not present
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}

action "show env one" {
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## uses attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = 123
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## uses attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

## needs present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  needs = 12
  args = "ls"
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## needs attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}

action "show env again" {
  uses = "popperized/bin/sh@master"
  needs = ["show env"]
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

## runs attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  runs = 123
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## runs attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
}
EOF

popper run --dry-run --engine "$RUNTIME"

# args attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = {
    FIRST_NAME  = "Mona"
    MIDDLE_NAME = "Lisa"
    LAST_NAME   = "Octocat"
  }
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## args attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME"

## env attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "show env"
}

action "show env" {
  uses = "popperized/bin/sh@master"
  args = "ls"
  env = [1, 2]
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## env attribute present and correct type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "test env-good"
}

action "test env-good" {
  uses = "popperized/bin/sh@master"
  args = "ls"
  env = {
    F_NAME = "F_NAME",
    L_NAME = "L_NAME"
  }
}
EOF

popper run --dry-run --engine "$RUNTIME"

## secrets attribute present but wrong type
cat <<EOF > main.workflow
workflow "test" {
  resolves = "secrets wrong"
}

action "secrets wrong" {
  uses = "popperized/bin/sh@master"
  args = "ls"
  secrets = {
    key =  "value"
  }
}
EOF

(! popper run --dry-run --engine "$RUNTIME")

## secrets attribute present and correct type
export F_NAME=F_NAME
export L_NAME=L_NAME
cat <<EOF > main.workflow
workflow "test" {
  resolves = "secrets good"
}

action "secrets good" {
  uses = "popperized/bin/sh@master"
  args = "ls"
  env = {
    F_NAME = "F_NAME",
    L_NAME = "L_NAME"
  }
  secrets = ["F_NAME", "L_NAME"]
}
EOF

popper run --dry-run --engine "$RUNTIME"

## show WARNING on unreachable actions
cat <<EOF > main.workflow
workflow "test" {
  resolves = "reachable"
}

action "reachable" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}

action "unreachable" {
  uses = "popperized/bin/sh@master"
  args = "ls"
}
EOF

popper run --dry-run --engine "$RUNTIME" 2>&1 | grep 'WARNING'

echo "Test VALIDATE passed."
