#!/bin/bash
set -ex
# shellcheck source=./ci/test/common
source ./ci/test/common
init_test_repo
cd "$test_repo_path"

# workflow with actions expected to execute correctly.
cat <<EOF > main.workflow
workflow "sample" {
  resolves = ["stage_one"]
}

action "one" {
  uses = "docker://busybox"
  args = ["echo", "Hello from busybox"]
}

action "two" {
  uses = "popperized/bin/curl@master"
  args = ["google.com"]
}

action "three" {
  uses = "popperized/bin/sh@master"
  runs = ["sh", "-c", "echo Hello from sh"]
}

action "four" {
  uses = "popperized/npm@master"
  args = ["--version"]
}

action "stage_one" {
  uses = "docker://debian:buster-slim"
  args = ["apt", "--version"]
  needs = [
    "one",
    "two",
    "three",
    "four"
  ]
}
EOF

popper run --parallel --engine "$RUNTIME" |& tee out
counter="$(grep -c "Action '[a-zA-Z_]*' ran successfully !" out)"
test "$counter" -eq 5

# workflow with actions expected to fail
cat <<EOF > main.workflow
workflow "sample" {
  resolves = ["stage_one"]
}

action "one" {
  uses = "docker://busybox"
  args = ["echdo", "Hello from busybox"]
}

action "two" {
  uses = "popperized/bin/curl@master"
  args = ["google.com"]
}

action "three" {
  uses = "popperized/bin/sh@master"
  runs = ["sh", "-c", "echo Hello from sh"]
}

action "four" {
  uses = "popperized/npm@master"
  args = ["--vesrsion"]
}

action "stage_one" {
  uses = "docker://debian:buster-slim"
  args = ["apt", "--version"]
  needs = [
    "one",
    "two",
    "three",
    "four"
  ]
}
EOF

(! popper run --parallel --engine "$RUNTIME")
echo "Some actions failed as expected !"

echo "Test PARALLEL passed."
