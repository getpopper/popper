#!/bin/bash
set -ex
# shellcheck source=./ci/test/common
source ./ci/test/common
init_test_repo
cd "$test_repo_path"


##############################
# Docker & Singularity - Serial
##############################

cat <<EOF > main.workflow
workflow "test" {
  resolves = ["sleep"]
}
action "sleep" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
}
EOF

send_sigint "popper run --engine $RUNTIME" 5

# give popper some time to remove containers
sleep 5

# ensure no containers are running
if [ "$RUNTIME" == "docker" ]
then
  test -z "$(docker ps -aq --filter 'status=running' --filter 'name=popper_')"
else
  test -z "$(singularity instance list | tail -n +2)"
fi

##############################
# Docker & Singularity - Parallel
##############################

cat <<EOF > main.workflow
workflow "test" {
  resolves = ["sleep"]
}

action "sleep1" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
}

action "sleep2" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
}

action "sleep3" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
}

action "sleep4" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
}

action "sleep5" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
}

action "sleep" {
  uses = "docker://busybox"
  args = ["sleep", "120"]
  needs = [
    "sleep1",
    "sleep2",
    "sleep3",
    "sleep4",
    "sleep5"
  ]
}
EOF

send_sigint "popper run --parallel --engine $RUNTIME" 2

sleep 5

if [ "$RUNTIME" == "docker" ]
then
  test -z "$(docker ps -aq --filter 'status=running' --filter 'name=popper_')"
else
  test -z "$(singularity instance list | tail -n +2)"
fi


#########################
# HostRunner - Serial
#########################

mkdir -p actions/sleep

cat <<EOF > actions/sleep/entrypoint.sh
#!/bin/bash
sleep \$@
EOF

chmod +x actions/sleep/entrypoint.sh

cat <<EOF > main.workflow
workflow "test" {
  resolves = ["sleep"]
}

action "sleep" {
  uses = "./actions/sleep"
  args = "120"
}
EOF

send_sigint 'popper run' 5

sleep 5

ps aux > running_procs
test "$(grep -c sleep running_procs)" -eq 0
rm running_procs


##############################
# HostRunner - Parallel
##############################

mkdir -p actions/sleep

cat <<EOF > actions/sleep/entrypoint.sh
#!/bin/bash
sleep \$@
EOF

chmod +x actions/sleep/entrypoint.sh

cat <<EOF > main.workflow
workflow "test" {
 resolves = ["sleep"]
}

action "sleep1" {
 uses = "./actions/sleep"
 args = "120"
}

action "sleep2" {
 uses = "./actions/sleep"
 args = "120"
}

action "sleep3" {
 uses = "./actions/sleep"
 args = "120"
}

action "sleep4" {
 uses = "./actions/sleep"
 args = "120"
}

action "sleep5" {
 uses = "./actions/sleep"
 args = "120"
}

action "sleep" {
 uses = "./actions/sleep"
 args = "120"
 needs = [
   "sleep1",
   "sleep2",
   "sleep3",
   "sleep4",
   "sleep5"
 ]
}
EOF

send_sigint 'popper run --parallel' 15

sleep 5

ps aux > running_procs
test "$(grep -c sleep running_procs)" -eq 0
rm running_procs

echo "Test INTERRUPT passed."
