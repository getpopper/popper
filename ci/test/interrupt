#!/bin/bash
set -ex

git clone https://github.com/cplee/github-actions-demo.git

pushd github-actions-demo
export PHONY_SECRET=foo
popper run &
pid=$!

# give popper some time to create containers
sleep 15

# -2 is for SIGINT or Ctrl-C
kill -2 $pid

# give popper some time to remove containers
sleep 5

# ensure no containers are running
test -z "$(docker ps -a)"

popd

#################
# test for --parallel run

source ./common
init_test_repo
cd $test_repo_path

cat <<EOF > main.workflow
workflow "test" {
  resolves = ["sleep"]
}

action "sleep1" {
  uses = "docker://busybox"
  args = ["sleep 360"]
}

action "sleep2" {
  uses = "docker://busybox"
  args = ["sleep 360"]
}

action "sleep3" {
  uses = "docker://busybox"
  args = ["sleep 360"]
}

action "sleep4" {
  uses = "docker://busybox"
  args = ["sleep 360"]
}

action "sleep5" {
  uses = "docker://busybox"
  args = ["sleep 360"]
}

action "sleep" {
  uses = "docker://busybox"
  needs = [
    "sleep1",
    "sleep2",
    "sleep3",
    "sleep4",
    "sleep5"
  ]
}
EOF

popper run --parallel &
pid=$!

# give popper some time to create containers
sleep 30

# -2 is for SIGINT or Ctrl-C
kill -2 $pid

# give popper some time to remove containers
sleep 60

test -z "$(docker ps -a)"

#################
# test for hostrunner actions

mkdir -p actions/sleep

cat <<EOF > actions/sleep/entrypoint.sh
#!/bin/bash
sleep $@
EOF
chmod +x actions/sleep/entrypoint.sh

cat <<EOF > main.workflow
workflow "test" {
  resolves = ["sleep"]
}

action "sleep1" {
  uses = "./actions/sleep"
  args = "360"
}

action "sleep2" {
  uses = "./actions/sleep"
  args = "360"
}

action "sleep3" {
  uses = "./actions/sleep"
  args = "360"
}

action "sleep4" {
  uses = "./actions/sleep"
  args = "360"
}

action "sleep5" {
  uses = "./actions/sleep"
  args = "360"
}

action "sleep" {
  uses = "docker://busybox"
  needs = [
    "sleep1",
    "sleep2",
    "sleep3",
    "sleep4",
    "sleep5"
  ]
}
EOF

popper run --parallel &
pid=$!

# give popper some time to start processes
sleep 5

# -2 is for SIGINT or Ctrl-C
kill -2 $pid

sleep 5

ps aux > running_procs
! cat running_procs | grep sleep
